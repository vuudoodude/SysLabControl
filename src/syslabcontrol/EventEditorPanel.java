/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package syslabcontrol;

import java.awt.Color;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentEvent;
import java.util.Collections;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author USB_Room
 */
public class EventEditorPanel extends javax.swing.JPanel {

    /**
     * Creates new form EventEditorPanel
     */
    
    TimelineView view;
    Simple8bitRelayControlPanel relayControl;
    Event currentEvent;
    TimelinePlayer parentPlayer;
    
    
    public EventEditorPanel(TimelineView view, TimelinePlayer parentPlayer) {
        initComponents();
        initRelayPanel();
        this.view = view;
        this.parentPlayer = parentPlayer;
        Iterator i = view.group.timeline.iterator();
        if(i.hasNext())
        {
            currentEvent = (Event)i.next();
            populateFields(currentEvent);
        }
        parentPlayer.componentResized(new ComponentEvent(this, ComponentEvent.COMPONENT_RESIZED));
        
    }
    public void populateFields(Event e)
    {
        titleField.setText(e.title);
        commandField.setText(e.command);
        descriptionField.setText(e.description);
        hoursField.setText("" + e.time.hours);
        minutesField.setText("" + e.time.minutes);
        secondsField.setText("" + e.time.seconds);
        
        view.viewEnd = (int)(view.group.getTimelineLengthInMillis() * 1.1);
        view.highlightedEvent = currentEvent;
        view.repaint();
        
        relayControl.setState(commandField.getText());
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        nextButton = new javax.swing.JButton();
        prevButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        hoursField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        minutesField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        secondsField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionField = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();
        addButton = new javax.swing.JButton();
        finishButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        titleField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        commandField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        removeButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setPreferredSize(new java.awt.Dimension(600, 480));

        nextButton.setText("Next >");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        prevButton.setText("< Prev");
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Event Title:");

        jLabel2.setText("Time Index:");

        hoursField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hoursFieldActionPerformed(evt);
            }
        });

        jLabel3.setText(":");

        minutesField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minutesFieldActionPerformed(evt);
            }
        });

        jLabel4.setText(":");

        secondsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondsFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Description:");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        descriptionField.setColumns(20);
        descriptionField.setRows(5);
        jScrollPane1.setViewportView(descriptionField);

        addButton.setText("Add New Event");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        finishButton.setText("Finished Editing");
        finishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Edit Timeline");

        titleField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleFieldActionPerformed(evt);
            }
        });

        jLabel7.setText("Command:");

        commandField.setText("D00");
        commandField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commandFieldActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );

        removeButton.setText("Remove This Event");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(prevButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nextButton))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(finishButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hoursField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minutesField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(secondsField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(commandField, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextButton)
                    .addComponent(prevButton)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(hoursField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(minutesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(secondsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(commandField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(finishButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeButton))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        if (currentEvent == null)
            return;
        
        Iterator i = view.group.timeline.iterator();
        while(i.hasNext())
        {
            Event e = (Event)i.next();
            if (e == currentEvent && i.hasNext())
            {
                currentEvent = (Event)i.next();
                
            }
            else if (e == currentEvent && !i.hasNext())
            {
                i = view.group.timeline.iterator();
                currentEvent = (Event)i.next();
            }
            populateFields(currentEvent);
            
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        if (currentEvent == null)
            return;
        
        Iterator i = view.group.timeline.descendingIterator();
        while(i.hasNext())
        {
            Event e = (Event)i.next();
            if (e == currentEvent && i.hasNext())
            {
                currentEvent = (Event)i.next();
                
            }
            else if (e == currentEvent && !i.hasNext())
            {
                i = view.group.timeline.descendingIterator();
                currentEvent = (Event)i.next();
            }
            populateFields(currentEvent);
            
        }
    }//GEN-LAST:event_prevButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        Event e = new Event(view.group, "New Event","Dff","Enter Description");
        currentEvent = e;
        populateFields(e);
        view.group.timeline.add(e);
        view.group.timeline.sort();
        view.repaint();
    }//GEN-LAST:event_addButtonActionPerformed

    private void titleFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleFieldActionPerformed
        if(currentEvent == null)
            return;
        currentEvent.title = titleField.getText();
        view.repaint();
    }//GEN-LAST:event_titleFieldActionPerformed

    private void commandFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commandFieldActionPerformed
        if(currentEvent == null)
            return;
        currentEvent.command = commandField.getText();
    }//GEN-LAST:event_commandFieldActionPerformed

    private void secondsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondsFieldActionPerformed
       if(currentEvent == null)
            return;
        updateTime();
     
    }//GEN-LAST:event_secondsFieldActionPerformed

    private void minutesFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minutesFieldActionPerformed
       if(currentEvent == null)
            return;
        updateTime();
       
    }//GEN-LAST:event_minutesFieldActionPerformed

    private void hoursFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hoursFieldActionPerformed
        if(currentEvent == null)
            return;
        updateTime();
        
    }//GEN-LAST:event_hoursFieldActionPerformed

    private void finishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishButtonActionPerformed
        parentPlayer.buildPanel();
        parentPlayer.remove(this);
        parentPlayer.repaint();
        
        
    }//GEN-LAST:event_finishButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
         if(currentEvent == null)
            return;
        Event e = currentEvent;
        prevButtonActionPerformed(evt);
        view.group.timeline.events.remove(e);
        if(view.group.timeline.events.isEmpty())
        {
            titleField.setText("");
            commandField.setText("");
            descriptionField.setText("");
            hoursField.setText("");
            minutesField.setText("");
            secondsField.setText("");
        
            view.viewEnd = (int)(100);
            
            view.repaint();
        
            relayControl.setState(commandField.getText());
            
        }
        
    }//GEN-LAST:event_removeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField commandField;
    private javax.swing.JTextArea descriptionField;
    private javax.swing.JButton finishButton;
    private javax.swing.JTextField hoursField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField minutesField;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton prevButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JTextField secondsField;
    private javax.swing.JTextField titleField;
    // End of variables declaration//GEN-END:variables

    private void updateTime() {
        
        //parse hours
        try{
            int x = Integer.parseInt(hoursField.getText());
            if (x < 0)
                throw new NumberFormatException();
            currentEvent.time.hours = x;
            hoursField.setForeground(Color.black);
        } catch (NumberFormatException e)
        {
            hoursField.setForeground(Color.red);
        }
        try{
            int x = Integer.parseInt(minutesField.getText());
            if (x < 0 || x > 59)
                throw new NumberFormatException();
            currentEvent.time.minutes = x;
            minutesField.setForeground(Color.black);
        } catch (NumberFormatException e)
        {
            minutesField.setForeground(Color.red);
        }
        try{
            int x = Integer.parseInt(secondsField.getText());
            if (x < 0 || x > 59)
                throw new NumberFormatException();
            currentEvent.time.seconds = x;
            secondsField.setForeground(Color.black);
        } catch (NumberFormatException e)
        {
            secondsField.setForeground(Color.red);
        }
        currentEvent.time.millis = currentEvent.time.toMillis();
        view.group.timeline.sort();

        view.repaint();        
    }

    private void initRelayPanel() {
        relayControl = new Simple8bitRelayControlPanel();
        jPanel1.setLayout(new GridBagLayout());
        jPanel1.add(relayControl);        
        
        relayControl.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                commandField.setText(relayControl.getCommand());
                commandFieldActionPerformed(e);
            }
        });
        relayControl.setState(commandField.getText());
    }
}
