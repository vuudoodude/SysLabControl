/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package syslabcontrol;

import java.awt.Dimension;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JToggleButton;

/**
 *
 * @author USB_Room
 */
public class Simple8bitRelayControlPanel extends javax.swing.JPanel {

    /**
     * Creates new form Simple8bitRelayControl
     */
    ImageIcon LEDgreen, LEDred;
    JToggleButton[] buttons;
    
    public Simple8bitRelayControlPanel() {
        initComponents(); 
        
        LEDgreen = createImageIcon("LEDgreen.png");
        LEDred = createImageIcon("LEDred.png");
        
        setLayout( new GridBagLayout());
        
        
        buttons = new JToggleButton[8];
        for (int i = 0; i < 8; i++)
        {
            JToggleButton tb = new JToggleButton("D" + i);
            tb.setSize(new Dimension(40,40));
            this.chooseIcon(tb);
            
            tb.addActionListener(new ActionListener(){
                @Override
                public void actionPerformed(ActionEvent e) {
                    chooseIcon(tb);
                }
            });
            
            
            buttons[i] = tb;
            
        }
        for (int i = 7; i >= 0; i --)
        {
            add(buttons[i]);
        }
        
        setPreferredSize(new Dimension(510,40));
    }
    
    public String getCommand()
    {
        int upperNibble = 0;
        int lowerNibble = 0;
        
        if (!buttons[0].isSelected())
            lowerNibble = lowerNibble + 1;
        if (!buttons[1].isSelected())
            lowerNibble = lowerNibble + 2;
        if (!buttons[2].isSelected())
            lowerNibble = lowerNibble + 4;
        if (!buttons[3].isSelected())
            lowerNibble = lowerNibble + 8;
        
        if (!buttons[4].isSelected())
            upperNibble = upperNibble +1;
        if (!buttons[5].isSelected())
            upperNibble = upperNibble +2;
        if (!buttons[6].isSelected())
            upperNibble = upperNibble +4;
        if (!buttons[7].isSelected())
            upperNibble = upperNibble +8;
        
        String command = "D";
        
        if(upperNibble < 10)
            command += upperNibble;        
        if (upperNibble == 10)
            command += "a";
        if (upperNibble == 11)
            command += "b";
        if (upperNibble == 12)
            command += "c";
        if (upperNibble == 13)
            command += "d";
        if (upperNibble == 14)
            command += "e";
        if (upperNibble == 15)
            command += "f";
        
        if(lowerNibble < 10)
            command += lowerNibble;        
        if (lowerNibble == 10)
            command += "a";
        if (lowerNibble == 11)
            command += "b";
        if (lowerNibble == 12)
            command += "c";
        if (lowerNibble == 13)
            command += "d";
        if (lowerNibble == 14)
            command += "e";
        if (lowerNibble == 15)
            command += "f";
        
        return command;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setMinimumSize(new java.awt.Dimension(100, 410));
        setPreferredSize(new java.awt.Dimension(100, 410));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 721, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    private void chooseIcon(JToggleButton button) {
        
        if (button.isSelected())
        {
            button.setIcon(LEDgreen);
        } else
        {
            button.setIcon(LEDred);
        }
    }
    

    private ImageIcon createImageIcon(String filename) {
        try {
            BufferedImage img = null;
            URL url = getClass().getResource(filename);
            img = ImageIO.read(new File(url.getPath()));
            
            return new ImageIcon(img.getScaledInstance(10, 10, Image.SCALE_SMOOTH));
        } catch (IOException ex) {
            System.out.println("Could not find resource: " + filename);
            return null;
        }
    }
    
    public void addActionListener(ActionListener l)
    {
        for (JToggleButton button : buttons) {
            button.addActionListener(l);
        }
    }
    public void setState(String command)
    {   
        command = command.trim();
        int x = Integer.decode("0x0" + command.substring(1,3));
        
        int mask = 1;
        for(int i = 0; i < 8; i++)
        {
            if ((x & mask) > 0)
            {
                buttons[i].setSelected(false);
            }else
            {
                buttons[i].setSelected(true);
            }
            mask = mask << 1;
        }
        for (JToggleButton button : buttons) {
            chooseIcon(button);
        }
    }
}
